# {{ ansible_managed }}


# Bind to a fixed address and port, IPv4 and IPv6
bind {{ domains[item].fastd_bind_ipv4_address | default(ansible_default_ipv4.address) }}:{{ 10000 + item | int }} interface "{{ domains[item].fastd_bind_ipv4_interface | default(ansible_default_ipv4.interface) }}";
bind [{{ domains[item].fastd_bind_ipv6_address | default(ansible_default_ipv6.address) }}]:{{ 10000 + item | int }} interface "{{ domains[item].fastd_bind_ipv6_interface | default(ansible_default_ipv6.interface) }}";
{% for bind in domains[item].fastd_extra_binds | default([]) %}
bind {{ bind }};
{% endfor %}

# Set the user, fastd will work as
user "nobody";

# Set the interface name
interface "fastd{{ item }}";

# Set the mode, the interface will work as
mode tap;

# Set the mtu of the interface
mtu {{ domains[item].fastd_mtu | default(1312) }};     # fine tuning needed, 1406

# Set the methods (aes128-gcm preferred, salsa2012+umac preferred for nodes)
method "null@l2tp";
# method "null";
# method "aes128-gcm";
# method "salsa2012+umac";
# method "salsa2012+gmac";

# Secret key generated by `fastd --generate-key`
include "/etc/fastd/{{ item }}/keys/secret.key";

# Log everything to syslog
#log to syslog level warn;
#log to syslog level debug;
log to stderr level {{ domains[item].fastd_log_level | default('info') }};

# Hide IP addresses in log output
#hide ip addresses yes;

# Include peers (dummy only)
include peers from "/etc/fastd/{{ item }}/peers/";

# Status Socket
# NOTE: the runtime directory is defined via systemd service file override!
status socket "/run/fastd-{{ item }}/fastd.sock";

# accept any host
on verify "
exit 0
";

# Configure a shell command that is run when fastd comes up
on up "
# Add fastd interface to bridge, then enable it
# ip link set dev $INTERFACE master br90 && ip link set dev $INTERFACE up
ip link set dev $INTERFACE up && batctl bat{{ item }} if add $INTERFACE
";
